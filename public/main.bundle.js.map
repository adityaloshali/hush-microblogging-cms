{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/editorhome/editoredit/editoredit.component.css","./src/app/components/editorhome/editoredit/editoredit.component.html","./src/app/components/editorhome/editoredit/editoredit.component.ts","./src/app/components/editorhome/editorhome.component.css","./src/app/components/editorhome/editorhome.component.html","./src/app/components/editorhome/editorhome.component.ts","./src/app/components/home/home.component.css","./src/app/components/home/home.component.html","./src/app/components/home/home.component.ts","./src/app/components/login/login.component.css","./src/app/components/login/login.component.html","./src/app/components/login/login.component.ts","./src/app/components/navbar/navbar.component.css","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/protected/protected.component.css","./src/app/components/protected/protected.component.html","./src/app/components/protected/protected.component.ts","./src/app/components/register/register.component.css","./src/app/components/register/register.component.html","./src/app/components/register/register.component.ts","./src/app/components/writer/createblog/createblog.component.css","./src/app/components/writer/createblog/createblog.component.html","./src/app/components/writer/createblog/createblog.component.ts","./src/app/components/writer/deleteblog/deleteblog.component.css","./src/app/components/writer/deleteblog/deleteblog.component.html","./src/app/components/writer/deleteblog/deleteblog.component.ts","./src/app/components/writer/writeredit/writeredit.component.css","./src/app/components/writer/writeredit/writeredit.component.html","./src/app/components/writer/writeredit/writeredit.component.ts","./src/app/components/writer/writerhome.component.css","./src/app/components/writer/writerhome.component.html","./src/app/components/writer/writerhome.component.ts","./src/app/guards/auth.guard.ts","./src/app/guards/editor.guard.ts","./src/app/guards/notAuth.guard.ts","./src/app/guards/writer.guard.ts","./src/app/services/auth.service.ts","./src/app/services/editor.service.ts","./src/app/services/writer.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ProtectedComponent } from './components/protected/protected.component';\r\nimport { WriterGuard } from './guards/writer.guard';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { CreateblogComponent } from './components/writer/createblog/createblog.component';\r\nimport { WriterhomeComponent } from './components/writer/writerhome.component';\r\nimport { WritereditComponent } from './components/writer/writeredit/writeredit.component';\r\nimport { DeleteblogComponent } from './components/writer/deleteblog/deleteblog.component';\r\nimport { EditorhomeComponent } from './components/editorhome/editorhome.component';\r\nimport { EditorGuard } from './guards/editor.guard';\r\nimport { EditoreditComponent } from './components/editorhome/editoredit/editoredit.component';\r\nimport { NotAuthGuard } from './guards/notAuth.guard';\r\nimport { AuthGuard } from './guards/auth.guard';\r\n\r\n\r\n// Our Array of Angular 2 Routes\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent, // Register Route\r\n    canActivate: [NotAuthGuard] // User must NOT be logged in to view this route\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent, // Login Route// User must NOT be logged in to view this route\r\n    canActivate: [NotAuthGuard] \r\n  },\r\n  {\r\n    path: 'protected',\r\n    component: ProtectedComponent,\r\n    canActivate: [AuthGuard] \r\n  },\r\n  {\r\n    path: 'writer',\r\n    component: WriterhomeComponent,\r\n    canActivate: [WriterGuard, AuthGuard]  // Login Route// User must NOT be logged in to view this route\r\n  },\r\n  {\r\n    path: 'writer/newblog',\r\n    component: CreateblogComponent,\r\n    canActivate: [WriterGuard, AuthGuard]   // Login Route// User must NOT be logged in to view this route\r\n  },\r\n  {\r\n    path: 'writer/edit-blog/:id',\r\n    component : WritereditComponent,\r\n    canActivate: [WriterGuard, AuthGuard] \r\n  },\r\n  {\r\n    path: 'writer/delete-blog/:id',\r\n    component: DeleteblogComponent,\r\n    canActivate: [WriterGuard, AuthGuard] \r\n  },\r\n  {\r\n    path: 'editor',\r\n    component: EditorhomeComponent,\r\n    canActivate: [EditorGuard, AuthGuard]\r\n  },\r\n  {\r\n    path: 'editor/edit-blog/:id',\r\n    component: EditoreditComponent,\r\n    canActivate: [EditorGuard, AuthGuard] \r\n  },\r\n  { path: '**', component: HomeComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  providers: [],\r\n  bootstrap: [],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \".container{\\r\\n    margin-top: 80px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<app-navbar></app-navbar>\\r\\n<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CustomFormsModule } from 'ng2-validation'\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AuthService } from './services/auth.service';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ProtectedComponent } from './components/protected/protected.component';\r\nimport { WriterGuard } from './guards/writer.guard';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { CreateblogComponent } from './components/writer/createblog/createblog.component';\r\nimport { WriterhomeComponent } from './components/writer/writerhome.component';\r\nimport { WriterService } from './services/writer.service';\r\nimport { WritereditComponent } from './components/writer/writeredit/writeredit.component';\r\nimport { DeleteblogComponent } from './components/writer/deleteblog/deleteblog.component';\r\nimport { EditorhomeComponent } from './components/editorhome/editorhome.component';\r\nimport { EditorGuard } from './guards/editor.guard';\r\nimport { EditorService } from './services/editor.service';\r\nimport { EditoreditComponent } from './components/editorhome/editoredit/editoredit.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { NotAuthGuard } from './guards/notAuth.guard';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    ProtectedComponent,\r\n    HomeComponent,\r\n    CreateblogComponent,\r\n    WriterhomeComponent,\r\n    WritereditComponent,\r\n    DeleteblogComponent,\r\n    EditorhomeComponent,\r\n    EditoreditComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    CustomFormsModule\r\n  ],\r\n  providers: [AuthService, \r\n    WriterGuard, \r\n    WriterService, \r\n    EditorGuard, \r\n    EditorService, \r\n    AuthGuard, \r\n    NotAuthGuard],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"div.alert{\\r\\n    margin-top: 4px;\\r\\n    margin-bottom: 2px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/editorhome/editoredit/editoredit.component.css\n// module id = ./src/app/components/editorhome/editoredit/editoredit.component.css\n// module chunks = main","module.exports = \"<h1 class=\\\"page-header\\\">Editor Edit Blog</h1>\\r\\n\\r\\n<!-- Custom Success/Erro Message -->\\r\\n<div class=\\\"row show-hide-message\\\" *ngIf=\\\"message\\\">\\r\\n  <div [ngClass]=\\\"messageClass\\\">\\r\\n    {{ message }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"updateBlog(f.value)\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"title\\\">Blog Title</label>\\r\\n          <input type=\\\"text\\\" #title=\\\"ngModel\\\" name=\\\"title\\\" id=\\\"title\\\" [(ngModel)]=\\\"blog.title\\\" class=\\\"form-control\\\" required>\\r\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"title.touched && title.invalid\\\">\\r\\n            Title is required.\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"content\\\">Blog Content</label>\\r\\n            <textarea type=\\\"textarea\\\" rows=\\\"10\\\" cols=\\\"80 \\\"name=\\\"content\\\" id=\\\"content\\\" [(ngModel)]=\\\"blog.content\\\" class=\\\"form-control\\\" (input)=\\\"contentChange($event.target.value)\\\" #content=\\\"ngModel\\\" required></textarea>\\r\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"content.touched && content.invalid\\\">\\r\\n              Content is required.\\r\\n            </div>\\r\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"(contentLength < 4 || contentLength > 150) && (content.dirty || content.touched)\\\">\\r\\n            Content length is  {{ contentLength }} words.</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"imageUrl\\\">Image URL</label>\\r\\n            <input type=\\\"text\\\" #imageUrl=\\\"ngModel\\\" name=\\\"imageUrl\\\" id=\\\"imageUrl\\\" [(ngModel)]=\\\"blog.imageUrl\\\" class=\\\"form-control\\\" required url>\\r\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"imageUrl.touched && imageUrl.invalid\\\">\\r\\n              <div *ngIf=\\\"imageUrl.errors.required\\\">Image URL is required.</div>\\r\\n              <div *ngIf=\\\"imageUrl.errors.url\\\">Please enter a valid URL.</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"tags\\\">Tags( space separated )</label>\\r\\n            <input type=\\\"text\\\" #tags=\\\"ngModel\\\" name=\\\"tags\\\" id=\\\"tags\\\" [(ngModel)]=\\\"blog.tags\\\" class=\\\"form-control\\\" required>\\r\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"tags.touched && tags.invalid\\\">\\r\\n              Tags are required.\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"category\\\">Blog Category</label>\\r\\n            <select #category=\\\"ngModel\\\" name=\\\"category\\\" id=\\\"category\\\" [(ngModel)]=\\\"blog.category\\\" class=\\\"form-control\\\" required>\\r\\n              <option value=\\\"career\\\">Career</option>\\r\\n              <option value=\\\"employment\\\">Employment</option>\\r\\n              <option value=\\\"upskilling\\\">Upskilling</option>\\r\\n              <option value=\\\"management\\\">Management</option>\\r\\n            </select>\\r\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"category.touched && category.invalid\\\">\\r\\n              Category is required.\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"status\\\">Blog Status</label>\\r\\n            <select #status=\\\"ngModel\\\" name=\\\"status\\\" id=\\\"status\\\" [(ngModel)]=\\\"blog.status\\\" class=\\\"form-control\\\" required>\\r\\n              <option value=1>Pending Editing</option>\\r\\n              <option value=2>Published</option>\\r\\n            </select>\\r\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"status.touched && status.invalid\\\">\\r\\n              Status is required.\\r\\n            </div>\\r\\n        </div>\\r\\n        <button [disabled]=\\\"!f.valid\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/editorhome/editoredit/editoredit.component.html\n// module id = ./src/app/components/editorhome/editoredit/editoredit.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { EditorService } from '../../../services/editor.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-editoredit',\r\n  templateUrl: './editoredit.component.html',\r\n  styleUrls: ['./editoredit.component.css']\r\n})\r\nexport class EditoreditComponent implements OnInit {\r\n\r\n  message;\r\n  messageClass;\r\n  blog = { \"_id\" : null};\r\n  processing = false;\r\n  currentParams;\r\n  loading = true;\r\n  contentLength = 0;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private editorService: EditorService\r\n  ) { }\r\n\r\n  contentChange(searchValue : string ) {  \r\n    let word = searchValue.trim().split(\" \");\r\n    this.contentLength = word.length;\r\n  }\r\n  \r\n  updateBlog(blog){\r\n     let id = this.blog._id;\r\n     blog.status = Number(blog.status);\r\n     blog.tags = blog.tags.trim().split(\" \");\r\n     console.log(blog);\r\n     this.editorService.updateBlog(id, blog).subscribe(data => {\r\n       console.log(data);\r\n       if (!data.success) {\r\n        console.log(data);\r\n        this.messageClass = 'alert alert-danger'; // Return error class\r\n        this.message = data.message; // Return error message\r\n        } else {\r\n          this.messageClass = 'alert alert-success'; // Return success class\r\n          this.message = data.message; // Return success message\r\n          // Clear form data after two seconds\r\n          setTimeout(() => {\r\n            this.router.navigate(['/editor']);\r\n          }, 2000);\r\n      }\r\n     });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentParams = this.activatedRoute.snapshot.params; // When component loads, grab the id\r\n    // Function to GET current blog with id in params\r\n    this.editorService.getSingleBlog(this.currentParams.id).subscribe(data => {\r\n      // Check if GET request was success or not\r\n      if (!data.success) {\r\n        this.messageClass = 'alert alert-danger'; // Set bootstrap error class\r\n        this.message = data.message; // Set error message\r\n      } else {\r\n        console.log(data.blog);\r\n        data.blog.tags = data.blog.tags.join(\" \");\r\n        console.log(data.blog);\r\n        this.blog = data.blog; // Save blog object for use in HTML\r\n        this.loading = false; // Allow loading of blog form\r\n      }\r\n    });        \r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/editorhome/editoredit/editoredit.component.ts","module.exports = \".footer{\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: justify;\\r\\n        -ms-flex-pack: justify;\\r\\n            justify-content: space-between;\\r\\n}\\r\\n\\r\\n.writer-info{\\r\\n    -ms-flex-preferred-size: 60%;\\r\\n        flex-basis: 60%;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/editorhome/editorhome.component.css\n// module id = ./src/app/components/editorhome/editorhome.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h1>Editor Home</h1>\\r\\n</div>\\r\\n<br />\\r\\n<br />\\r\\n<div class=\\\"panel panel-primary\\\" *ngFor=\\\"let blog of blogPosts\\\">\\r\\n\\r\\n    <!-- Panel Title -->\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n      <h3 class=\\\"panel-title\\\">{{ blog.title }}</h3>\\r\\n    </div>\\r\\n\\r\\n    <!-- Panel Body -->\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      {{ blog.content }}\\r\\n    </div>\\r\\n\\r\\n    <!-- Panel Footer Start -->\\r\\n    <div class=\\\"panel-footer footer\\\">\\r\\n        <div class=\\\"writer-info\\\">\\r\\n            <strong>Posted by: </strong>{{ blog.authorName }}\\r\\n            <strong> on </strong>{{ blog.createdAt | date:'MMM dd, yyyy' }}    \\r\\n        </div>\\r\\n        <div class=\\\"crud-routes\\\">\\r\\n          <!-- Edit Button -->\\r\\n          <a [routerLink]=\\\"['/editor/edit-blog/', blog._id]\\\" ><button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-info\\\">Edit</button></a>\\r\\n        </div>\\r\\n      </div>\\r\\n    <!-- Panel Footer End -->\\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/editorhome/editorhome.component.html\n// module id = ./src/app/components/editorhome/editorhome.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { EditorService } from '../../services/editor.service';\r\n\r\n@Component({\r\n  selector: 'app-editorhome',\r\n  templateUrl: './editorhome.component.html',\r\n  styleUrls: ['./editorhome.component.css']\r\n})\r\nexport class EditorhomeComponent implements OnInit {\r\n\r\n  blogPosts;\r\n\r\n  constructor(private editorService: EditorService) { }\r\n\r\n  getBlogs(){\r\n    this.editorService.getAllBlogs().subscribe(data => {\r\n      this.blogPosts = data.blogs;\r\n      console.log(this.blogPosts);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.editorService.getAllBlogs().subscribe(data => {\r\n      this.blogPosts = data.blogs;\r\n      console.log(this.blogPosts);\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/editorhome/editorhome.component.ts","module.exports = \".hero{\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n        -ms-flex-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n    height: 80vh;\\r\\n}\\r\\n\\r\\n.hero h1{\\r\\n    font-family: 'Courier New', Courier, monospace;\\r\\n    font-size: 10rem;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/home/home.component.css\n// module id = ./src/app/components/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"hero\\\">\\r\\n  <h1>Hush CMS</h1>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/home/home.component.html\n// module id = ./src/app/components/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/home/home.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/login/login.component.css\n// module id = ./src/app/components/login/login.component.css\n// module chunks = main","module.exports = \"<h1 class=\\\"page-header\\\">Login Page</h1>\\r\\n\\r\\n<!-- Custom Success/Error Message -->\\r\\n<div class=\\\"row show-hide-message\\\">\\r\\n    <div [ngClass]=\\\"messageClass\\\">\\r\\n      {{ message }}\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n<!-- Registration Form -->\\r\\n<form [formGroup]=\\\"form\\\" (submit)=\\\"onLoginSubmit()\\\">\\r\\n\\r\\n  <!-- Username Input -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"username\\\">Username</label>\\r\\n      <input type=\\\"text\\\" name=\\\"username\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Username\\\" formControlName=\\\"username\\\"/>\\r\\n  </div>\\r\\n\\r\\n  <!-- Password Input -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"password\\\">Password</label>\\r\\n      <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Password\\\" formControlName=\\\"password\\\" />\\r\\n  </div>\\r\\n\\r\\n  <!-- Submit Input -->\\r\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\" />\\r\\n\\r\\n</form>\\r\\n<!-- Registration Form /-->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/login/login.component.html\n// module id = ./src/app/components/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent{\r\n  messageClass;\r\n  message;\r\n  processing = false;\r\n  form;\r\n  previousUrl;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n  ) {\r\n    this.createForm(); // Create Login Form when component is constructed\r\n  }\r\n\r\n  // Function to create login form\r\n  createForm() {\r\n    this.form = this.formBuilder.group({\r\n      username: ['', Validators.required], // Username field\r\n      password: ['', Validators.required] // Password field\r\n    });\r\n  }\r\n\r\n  // Function to disable form\r\n  disableForm() {\r\n    this.form.controls['username'].disable(); // Disable username field\r\n    this.form.controls['password'].disable(); // Disable password field\r\n  }\r\n\r\n  // Function to enable form\r\n  enableForm() {\r\n    this.form.controls['username'].enable(); // Enable username field\r\n    this.form.controls['password'].enable(); // Enable password field\r\n  }\r\n\r\n  // Functiont to submit form and login user\r\n  onLoginSubmit() {\r\n    this.processing = true; // Used to submit button while is being processed\r\n    this.disableForm(); // Disable form while being process\r\n    // Create user object from user's input\r\n    const user = {\r\n      username: this.form.get('username').value, // Username input field\r\n      password: this.form.get('password').value // Password input field\r\n    }\r\n\r\n    // Function to send login data to API\r\n    this.authService.login(user).subscribe(data => {\r\n      //Check if response was a success or error\r\n      if (!data.success) {\r\n        this.messageClass = 'alert alert-danger'; // Set bootstrap error class\r\n        this.message = data.message; // Set error message\r\n        this.processing = false; // Enable submit button\r\n        this.enableForm(); // Enable form for editting\r\n      } else {\r\n        this.messageClass = 'alert alert-success'; // Set bootstrap success class\r\n        this.message = data.message; // Set success message\r\n        // Function to store user's token in client local storage\r\n        console.log(data);\r\n        this.authService.storeUserData(data.token, data.username, data.authority, data.id);\r\n        // After 2 seconds, redirect to dashboard page\r\n        setTimeout(() => {\r\n            console.log(this.authService.authority);\r\n          // Check if user was redirected or logging in for first time\r\n            if(this.authService.authority === \"writer\"){\r\n              this.router.navigate(['/writer']);\r\n            }else{\r\n              this.router.navigate(['/editor']); // Navigate to dashboard view\r\n            }          \r\n        }, 2000);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/login/login.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/navbar/navbar.component.css\n// module id = ./src/app/components/navbar/navbar.component.css\n// module chunks = main","module.exports = \"<!-- Fixed navbar -->\\r\\n<nav class=\\\"navbar navbar-default navbar-inverse navbar-fixed-top\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"navbar-header\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"navbar\\\">\\r\\n         <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n         <span class=\\\"icon-bar\\\"></span>\\r\\n         <span class=\\\"icon-bar\\\"></span>\\r\\n         <span class=\\\"icon-bar\\\"></span>\\r\\n       </button>\\r\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">HUSH CMS</a>\\r\\n    </div>\\r\\n    <div id=\\\"navbar\\\" class=\\\"navbar-collapse collapse\\\">\\r\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n        <li><a *ngIf=\\\"authService.loggedIn()\\\" routerLink=\\\"/writer\\\"><span class=\\\"glyphicon glyphicon-home\\\"></span>&nbsp;&nbsp;WriterHome</a></li>\\r\\n        <li><a *ngIf=\\\"authService.loggedIn()\\\" routerLink=\\\"/editor\\\"><span class=\\\"glyphicon glyphicon-home\\\"></span>&nbsp;&nbsp;EditorHome</a></li>\\r\\n        <li><a *ngIf=\\\"authService.loggedIn()\\\" href=\\\"#\\\" (click)=\\\"onLogoutClick()\\\"><span class=\\\"glyphicon glyphicon-log-out\\\"></span>&nbsp;&nbsp;Logout</a></li>\\r\\n        <li><a *ngIf=\\\"!authService.loggedIn()\\\" routerLink=\\\"/register\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span>&nbsp;&nbsp;Register</a></li>\\r\\n        <li><a *ngIf=\\\"!authService.loggedIn()\\\" routerLink=\\\"/login\\\"><span class=\\\"glyphicon glyphicon-log-in\\\"></span>&nbsp;&nbsp;Login</a></li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <!--/.nav-collapse -->\\r\\n  </div>\\r\\n</nav>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/navbar/navbar.component.html\n// module id = ./src/app/components/navbar/navbar.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  // Function to logout user\r\n  onLogoutClick() {\r\n    this.authService.logout(); // Logout user\r\n    this.router.navigate(['/']); // Navigate back to home page\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/navbar/navbar.component.ts","module.exports = \".warning{\\r\\n    height: 80vh;\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n        -ms-flex-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/protected/protected.component.css\n// module id = ./src/app/components/protected/protected.component.css\n// module chunks = main","module.exports = \"<div class=\\\"warning\\\">\\r\\n    <h1>You are not AUTHORIZED to view this page</h1>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/protected/protected.component.html\n// module id = ./src/app/components/protected/protected.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-protected',\r\n  templateUrl: './protected.component.html',\r\n  styleUrls: ['./protected.component.css']\r\n})\r\nexport class ProtectedComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/protected/protected.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/register/register.component.css\n// module id = ./src/app/components/register/register.component.css\n// module chunks = main","module.exports = \"<h1 class=\\\"page-header\\\">Register Page</h1>\\r\\n\\r\\n<!-- Custom Success/Error Message -->\\r\\n<div class=\\\"row show-hide-message\\\">\\r\\n  <div [ngClass]=\\\"messageClass\\\">\\r\\n    {{ message }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Registration Form -->\\r\\n<form [formGroup]=\\\"form\\\" (submit)=\\\"onRegisterSubmit()\\\">\\r\\n\\r\\n  <!-- Username Input -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"username\\\">Username</label>\\r\\n    <div [ngClass]=\\\"{'has-error': (form.controls.username.errors && form.controls.username.dirty), 'has-success': !form.controls.username.errors}\\\">\\r\\n        <input type=\\\"text\\\" name=\\\"username\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Username\\\" formControlName=\\\"username\\\"/>\\r\\n        <ul class=\\\"help-block\\\">\\r\\n            <li *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">This field is required</li>\\r\\n            <li *ngIf=\\\"form.controls.username.errors?.minlength && form.controls.username.dirty || form.controls.username.errors?.maxlength && form.controls.username.dirty \\\">Minimum characters: 3, Maximum characters: 15</li>\\r\\n        </ul>\\r\\n      </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Password Input -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"password\\\">Password</label>\\r\\n    <div [ngClass]=\\\"{'has-error': (form.controls.password.errors && form.controls.password.dirty), 'has-success': !form.controls.password.errors}\\\">\\r\\n        <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Password\\\" formControlName=\\\"password\\\" />\\r\\n        <ul class=\\\"help-block\\\">\\r\\n            <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This field is required</li>\\r\\n            <li *ngIf=\\\"form.controls.password.errors?.minlength && form.controls.password.dirty || form.controls.password.errors?.maxlength && form.controls.password.dirty \\\">Minimum characters: 8, Maximum characters: 35</li>\\r\\n            <li *ngIf=\\\"form.controls.password.errors?.validatePassword && form.controls.password.dirty\\\">Password must contain aleast 1 Upper and Lowercase letter,  a number, a special character.</li>\\r\\n          </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Confirm Password Input -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"confirm\\\">Confirm Password</label>\\r\\n      <div [ngClass]=\\\"{'has-error': (form.controls.confirm.errors && form.controls.confirm.dirty) || (form.errors?.matchingPasswords && form.controls.confirm.dirty), 'has-success': !form.controls.confirm.errors && !form.errors?.matchingPasswords}\\\">\\r\\n        <input type=\\\"password\\\" name=\\\"confirm\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Confirm Password\\\" formControlName=\\\"confirm\\\" />\\r\\n        <!-- Validation -->\\r\\n        <ul class=\\\"help-block\\\">\\r\\n          <li *ngIf=\\\"form.controls.confirm.errors?.required && form.controls.confirm.dirty\\\">This field is required</li>\\r\\n          <li *ngIf=\\\"form.errors?.matchingPasswords && form.controls.confirm.dirty\\\">Password do not match</li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  <!-- Submit Input -->\\r\\n  <input [disabled]=\\\"!form.valid || processing\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\" />\\r\\n\\r\\n</form>\\r\\n<!-- Registration Form /-->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/register/register.component.html\n// module id = ./src/app/components/register/register.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  form;\r\n  message;\r\n  messageClass;\r\n  processing = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.createForm(); // Create Angular 2 Form when component loads\r\n  }\r\n\r\n  // Function to create registration form\r\n  createForm() {\r\n    this.form = this.formBuilder.group({\r\n      // Username Input\r\n      username: ['', Validators.compose([\r\n        Validators.required, // Field is required\r\n        Validators.minLength(3), // Minimum length is 3 characters\r\n        Validators.maxLength(15), // Maximum length is 15 characters\r\n        this.validateUsername // Custom validation\r\n      ])],\r\n      // Password Input\r\n      password: ['', Validators.compose([\r\n        Validators.required, // Field is required\r\n        Validators.minLength(8), // Minimum length is 8 characters\r\n        Validators.maxLength(35), // Maximum length is 35 characters\r\n        this.validatePassword // Custom validation\r\n      ])],\r\n      // Confirm Password Input\r\n      confirm: ['', Validators.required] // Field is required\r\n    }, { validator: this.matchingPasswords('password', 'confirm') }); // Add custom validator to form for matching passwords\r\n  }\r\n\r\n  // Function to disable the registration form\r\n  disableForm() {\r\n    this.form.controls['username'].disable();\r\n    this.form.controls['password'].disable();\r\n    this.form.controls['confirm'].disable();\r\n  }\r\n\r\n  // Function to enable the registration form\r\n  enableForm() {\r\n    this.form.controls['username'].enable();\r\n    this.form.controls['password'].enable();\r\n    this.form.controls['confirm'].enable();\r\n  }\r\n\r\n  // Function to validate username is proper format\r\n  validateUsername(controls) {\r\n    // Create a regular expression\r\n    const regExp = new RegExp(/^[a-zA-Z0-9\\s]+$/);\r\n    // Test username against regular expression\r\n    if (regExp.test(controls.value)) {\r\n      return null; // Return as valid username\r\n    } else {\r\n      return { 'validateUsername': true } // Return as invalid username\r\n    }\r\n  }\r\n\r\n  // Function to validate password\r\n  validatePassword(controls) {\r\n    // Create a regular expression\r\n    const regExp = new RegExp(/^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[\\d])(?=.*?[\\W]).{8,35}$/);\r\n    // Test password against regular expression\r\n    if (regExp.test(controls.value)) {\r\n      return null; // Return as valid password\r\n    } else {\r\n      return { 'validatePassword': true } // Return as invalid password\r\n    }\r\n  }\r\n\r\n  // Funciton to ensure passwords match\r\n  matchingPasswords(password, confirm) {\r\n    return (group: FormGroup) => {\r\n      // Check if both fields are the same\r\n      if (group.controls[password].value === group.controls[confirm].value) {\r\n        return null; // Return as a match\r\n      } else {\r\n        return { 'matchingPasswords': true } // Return as error: do not match\r\n      }\r\n    }\r\n  }\r\n\r\n  // Function to submit form\r\n  onRegisterSubmit() {\r\n    this.processing = true; // Used to notify HTML that form is in processing, so that it can be disabled\r\n    this.disableForm(); // Disable the form\r\n    // Create user object form user's inputs\r\n    const user = {\r\n     // E-mail input field\r\n      username: this.form.get('username').value, // Username input field\r\n      password: this.form.get('password').value // Password input field\r\n    }\r\n\r\n    // Function from authentication service to register user\r\n    this.authService.registerUser(user).subscribe(data => {\r\n      // Resposne from registration attempt\r\n      if (!data.success) {\r\n        this.messageClass = 'alert alert-danger'; // Set an error class\r\n        this.message = data.message; // Set an error message\r\n        this.processing = false; // Re-enable submit button\r\n        this.enableForm(); // Re-enable form\r\n      } else {\r\n        this.messageClass = 'alert alert-success'; // Set a success class\r\n        this.message = data.message; // Set a success message\r\n        // After 2 second timeout, navigate to the login page\r\n        setTimeout(() => {\r\n          this.router.navigate(['/login']); // Redirect to login view\r\n        }, 2000);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // // Function to check if e-mail is taken\r\n  // checkEmail() {\r\n  //   // Function from authentication file to check if e-mail is taken\r\n  //   this.authService.checkEmail(this.form.get('email').value).subscribe(data => {\r\n  //     // Check if success true or false was returned from API\r\n  //     if (!data.success) {\r\n  //       this.emailValid = false; // Return email as invalid\r\n  //       this.emailMessage = data.message; // Return error message\r\n  //     } else {\r\n  //       this.emailValid = true; // Return email as valid\r\n  //       this.emailMessage = data.message; // Return success message\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // // Function to check if username is available\r\n  // checkUsername() {\r\n  //   // Function from authentication file to check if username is taken\r\n  //   this.authService.checkUsername(this.form.get('username').value).subscribe(data => {\r\n  //     // Check if success true or success false was returned from API\r\n  //     if (!data.success) {\r\n  //       this.usernameValid = false; // Return username as invalid\r\n  //       this.usernameMessage = data.message; // Return error message\r\n  //     } else {\r\n  //       this.usernameValid = true; // Return username as valid\r\n  //       this.usernameMessage = data.message; // Return success message\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/register/register.component.ts","module.exports = \"div.alert{\\r\\n    margin-top: 4px;\\r\\n    margin-bottom: 2px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/writer/createblog/createblog.component.css\n// module id = ./src/app/components/writer/createblog/createblog.component.css\n// module chunks = main","module.exports = \"<!-- Custom Success/Error Message -->\\r\\n<div class=\\\"row show-hide-message\\\" *ngIf=\\\"message\\\">\\r\\n  <div [ngClass]=\\\"messageClass\\\">\\r\\n    {{ message }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"saveBlog(f.value)\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"title\\\">Blog Title</label>\\r\\n        <input type=\\\"text\\\" #title=\\\"ngModel\\\" name=\\\"title\\\" id=\\\"title\\\" ngModel class=\\\"form-control\\\" required>\\r\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"title.touched && title.invalid\\\">\\r\\n          Title is required.\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"content\\\">Blog Content</label>\\r\\n          <textarea type=\\\"textarea\\\" rows=\\\"10\\\" cols=\\\"80 \\\"name=\\\"content\\\" id=\\\"content\\\" ngModel class=\\\"form-control\\\" (input)=\\\"contentChange($event.target.value)\\\" #content=\\\"ngModel\\\" required></textarea>\\r\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"content.touched && content.invalid\\\">\\r\\n              Content is required.\\r\\n            </div>\\r\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"(contentLength < 4 || contentLength > 150) && (content.dirty || content.touched)\\\">\\r\\n           Content length is  {{ contentLength }} words.</div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"imageUrl\\\">Image URL</label>\\r\\n          <input type=\\\"text\\\" #imageUrl=\\\"ngModel\\\" name=\\\"imageUrl\\\" id=\\\"imageUrl\\\" ngModel class=\\\"form-control\\\" required url>\\r\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"imageUrl.touched && imageUrl.invalid\\\">\\r\\n            <div *ngIf=\\\"imageUrl.errors.required\\\">Image URL is required.</div>\\r\\n            <div *ngIf=\\\"imageUrl.errors.url\\\">Please enter a valid URL.</div>\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"tags\\\">Tags( space separated )</label>\\r\\n          <input type=\\\"text\\\" #tags=\\\"ngModel\\\" name=\\\"tags\\\" id=\\\"tags\\\" ngModel class=\\\"form-control\\\" required>\\r\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"tags.touched && tags.invalid\\\">\\r\\n            Tags are required.\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"category\\\">Blog Category</label>\\r\\n          <select #category=\\\"ngModel\\\" name=\\\"category\\\" id=\\\"category\\\" ngModel class=\\\"form-control\\\" required>\\r\\n            <option value=\\\"career\\\">Career</option>\\r\\n            <option value=\\\"employment\\\">Employment</option>\\r\\n            <option value=\\\"upskilling\\\">Upskilling</option>\\r\\n            <option value=\\\"management\\\">Management</option>\\r\\n          </select>\\r\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"category.touched && category.invalid\\\">\\r\\n             Category is required.\\r\\n          </div>\\r\\n      </div>\\r\\n      <button [disabled]=\\\"!f.valid\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/writer/createblog/createblog.component.html\n// module id = ./src/app/components/writer/createblog/createblog.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { WriterService } from '../../../services/writer.service';\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-createblog',\r\n  templateUrl: './createblog.component.html',\r\n  styleUrls: ['./createblog.component.css']\r\n})\r\nexport class CreateblogComponent implements OnInit {\r\n\r\n  messageClass;\r\n  message;\r\n  contentLength = 0;\r\n\r\n  constructor(\r\n    private writerService: WriterService,\r\n    private router: Router) { }\r\n\r\n  contentChange(searchValue : string ) {  \r\n    let word = searchValue.trim().split(\" \");\r\n    this.contentLength = word.length;\r\n  }  \r\n\r\n  saveBlog(blog){\r\n    blog.tags = blog.tags.trim().split(\" \");\r\n    console.log(blog);\r\n    this.writerService.createBlog(blog).subscribe(data => {\r\n      console.log(data);\r\n      if (!data.success) {\r\n        this.messageClass = 'alert alert-danger'; // Return error class\r\n        this.message = data.message; // Return error message\r\n      } else {\r\n        this.messageClass = 'alert alert-success'; // Return success class\r\n        this.message = data.message; // Return success message\r\n        // Clear form data after two seconds\r\n        setTimeout(() => {\r\n          this.router.navigate(['/writer']);\r\n        }, 2000);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/writer/createblog/createblog.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/writer/deleteblog/deleteblog.component.css\n// module id = ./src/app/components/writer/deleteblog/deleteblog.component.css\n// module chunks = main","module.exports = \"<h1 class=\\\"page-header\\\">Delete Blog</h1>\\r\\n\\r\\n<!-- Custom Success/Error Message -->\\r\\n<div class=\\\"row show-hide-message\\\" *ngIf=\\\"message\\\">\\r\\n  <div [ngClass]=\\\"messageClass\\\">\\r\\n    {{ message }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Modal Confirmation Window -->\\r\\n<div class=\\\"col-md-12\\\" *ngIf=\\\"foundBlog\\\">\\r\\n  <!-- Model Outer Layer -->\\r\\n  <div class=\\\"modal-content\\\">\\r\\n    <!-- Modal Header -->\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <!-- Modal Title -->\\r\\n      <h4 class=\\\"modal-title\\\">Confirm</h4>\\r\\n    </div>\\r\\n\\r\\n    <!-- Modal Body -->\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <p>Are you sure you would like to delete this blog?</p>\\r\\n    </div>\\r\\n\\r\\n    <!-- Modal Footer -->\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <!-- Yes Button -->\\r\\n      <button [disabled]=\\\"processing\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteBlog()\\\">Yes</button>\\r\\n      <!-- No Button -->\\r\\n      <a routerLink=\\\"/writer\\\"><button [disabled]=\\\"processing\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-danger\\\">No</button></a>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br />\\r\\n\\r\\n  <!-- Panel -->\\r\\n  <div class=\\\"panel panel-primary\\\">\\r\\n    <!-- Panel Heading -->\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n      <!-- Panel Title -->\\r\\n      <h3 class=\\\"panel-title\\\">{{ blog.title }}</h3>\\r\\n    </div>\\r\\n\\r\\n    <!-- Panel Body -->\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      {{ blog.content }}\\r\\n    </div>\\r\\n\\r\\n    <!-- Panel Footer -->\\r\\n    <div class=\\\"panel-footer\\\">\\r\\n      <strong>Posted by: </strong> {{ blog.authorName }}\\r\\n      <br />\\r\\n      <strong>Date: </strong> {{ blog.createdAt | date:'MMM dd, yyyy' }}\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/writer/deleteblog/deleteblog.component.html\n// module id = ./src/app/components/writer/deleteblog/deleteblog.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { WriterService } from '../../../services/writer.service';\r\n\r\n@Component({\r\n  selector: 'app-deleteblog',\r\n  templateUrl: './deleteblog.component.html',\r\n  styleUrls: ['./deleteblog.component.css']\r\n})\r\nexport class DeleteblogComponent implements OnInit {\r\n\r\n  message;\r\n  messageClass;\r\n  foundBlog = false;\r\n  processing = false;\r\n  blog;\r\n  currentParams;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private writerService: WriterService\r\n  ) { }\r\n\r\n    // Function to delete blogs\r\n    deleteBlog() {\r\n      this.processing = true; // Disable buttons\r\n      // Function for DELETE request\r\n      this.writerService.deleteBlog(this.currentParams.id).subscribe(data => {\r\n        // Check if delete request worked\r\n        if (!data.success) {\r\n          this.messageClass = 'alert alert-danger'; // Return error bootstrap class\r\n          this.message = data.message; // Return error message\r\n        } else {\r\n          this.messageClass = 'alert alert-success'; // Return bootstrap success class\r\n          this.message = data.message; // Return success message\r\n          // After two second timeout, route to blog page\r\n          setTimeout(() => {\r\n            this.router.navigate(['/writer']); // Route users to blog page\r\n          }, 2000);\r\n        }\r\n      });\r\n    }\r\n  \r\n\r\n  ngOnInit() {\r\n    this.currentParams = this.activatedRoute.snapshot.params; // Get URL paramaters on page load\r\n    // Function for GET request to retrieve blog\r\n    this.writerService.getSingleBlog(this.currentParams.id).subscribe(data => {\r\n      // Check if request was successfull\r\n      if (!data.success) {\r\n        this.messageClass = 'alert alert-danger'; // Return bootstrap error class\r\n        this.message = data.message; // Return error message\r\n      } else {\r\n        // Create the blog object to use in HTML\r\n        this.blog = data.blog;\r\n        this.foundBlog = true; // Displaly blog window\r\n      }\r\n    });    \r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/writer/deleteblog/deleteblog.component.ts","module.exports = \"div.alert{\\r\\n    margin-top: 4px;\\r\\n    margin-bottom: 2px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/writer/writeredit/writeredit.component.css\n// module id = ./src/app/components/writer/writeredit/writeredit.component.css\n// module chunks = main","module.exports = \"<h1 class=\\\"page-header\\\">Edit Blog</h1>\\r\\n\\r\\n<!-- Custom Success/Erro Message -->\\r\\n<div class=\\\"row show-hide-message\\\" *ngIf=\\\"message\\\">\\r\\n  <div [ngClass]=\\\"messageClass\\\">\\r\\n    {{ message }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"updateBlog(f.value)\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"title\\\">Blog Title</label>\\r\\n          <input type=\\\"text\\\" #title=\\\"ngModel\\\" name=\\\"title\\\" id=\\\"title\\\" [(ngModel)]=\\\"blog.title\\\" class=\\\"form-control\\\" required>\\r\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"title.touched && title.invalid\\\">\\r\\n            Title is required.\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"content\\\">Blog Content</label>\\r\\n            <textarea type=\\\"textarea\\\" rows=\\\"10\\\" cols=\\\"80 \\\"name=\\\"content\\\" id=\\\"content\\\" [(ngModel)]=\\\"blog.content\\\" class=\\\"form-control\\\" (input)=\\\"contentChange($event.target.value)\\\" #content=\\\"ngModel\\\" required></textarea>\\r\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"content.touched && content.invalid\\\">\\r\\n              Content is required.\\r\\n            </div>\\r\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"(contentLength < 4 || contentLength > 150) && (content.dirty || content.touched)\\\">\\r\\n            Content length is  {{ contentLength }} words.</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"imageUrl\\\">Image URL</label>\\r\\n            <input type=\\\"text\\\" #imageUrl=\\\"ngModel\\\" name=\\\"imageUrl\\\" id=\\\"imageUrl\\\" [(ngModel)]=\\\"blog.imageUrl\\\" class=\\\"form-control\\\" required url>\\r\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"imageUrl.touched && imageUrl.invalid\\\">\\r\\n              <div *ngIf=\\\"imageUrl.errors.required\\\">Image URL is required.</div>\\r\\n              <div *ngIf=\\\"imageUrl.errors.url\\\">Please enter a valid URL.</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"tags\\\">Tags( space separated )</label>\\r\\n            <input type=\\\"text\\\" #tags=\\\"ngModel\\\" name=\\\"tags\\\" id=\\\"tags\\\" [(ngModel)]=\\\"blog.tags\\\" class=\\\"form-control\\\" required>\\r\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"tags.touched && tags.invalid\\\">\\r\\n              Tags are required.\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"category\\\">Blog Category</label>\\r\\n            <select #category=\\\"ngModel\\\" name=\\\"category\\\" id=\\\"category\\\" [(ngModel)]=\\\"blog.category\\\" class=\\\"form-control\\\" required>\\r\\n              <option value=\\\"career\\\">Career</option>\\r\\n              <option value=\\\"employment\\\">Employment</option>\\r\\n              <option value=\\\"upskilling\\\">Upskilling</option>\\r\\n              <option value=\\\"management\\\">Management</option>\\r\\n            </select>\\r\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"category.touched && category.invalid\\\">\\r\\n              Category is required.\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"status\\\">Blog Status</label>\\r\\n            <select #status=\\\"ngModel\\\" name=\\\"status\\\" id=\\\"status\\\" [(ngModel)]=\\\"blog.status\\\" class=\\\"form-control\\\" required>\\r\\n              <option value=0 >Draft</option>\\r\\n              <option value=1>Pending Editing</option>\\r\\n            </select>\\r\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"status.touched && status.invalid\\\">\\r\\n              Status is required.\\r\\n            </div>\\r\\n        </div>\\r\\n        <button [disabled]=\\\"!f.valid\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/writer/writeredit/writeredit.component.html\n// module id = ./src/app/components/writer/writeredit/writeredit.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { WriterService } from '../../../services/writer.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-editblog',\r\n  templateUrl: './writeredit.component.html',\r\n  styleUrls: ['./writeredit.component.css']\r\n})\r\nexport class WritereditComponent implements OnInit {\r\n\r\n  message;\r\n  messageClass;\r\n  blog = { \"_id\" : null};\r\n  processing = false;\r\n  currentParams;\r\n  loading = true;\r\n  contentLength = 0;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private writerService: WriterService\r\n  ) { }\r\n\r\n  contentChange(searchValue : string ) {  \r\n    let word = searchValue.trim().split(\" \");\r\n    this.contentLength = word.length;\r\n  }\r\n\r\n  updateBlog(blog){\r\n     let id = this.blog._id;\r\n     blog.status = Number(blog.status);\r\n     blog.tags = blog.tags.trim().split(\" \");\r\n     console.log(blog);\r\n     this.writerService.updateBlog(id, blog).subscribe(data => {\r\n       console.log(data);\r\n       if (!data.success) {\r\n        this.messageClass = 'alert alert-danger'; // Return error class\r\n        this.message = data.message; // Return error message\r\n        } else {\r\n          this.messageClass = 'alert alert-success'; // Return success class\r\n          this.message = data.message; // Return success message\r\n          // Clear form data after two seconds\r\n          setTimeout(() => {\r\n            this.router.navigate(['/writer']);\r\n          }, 2000);\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentParams = this.activatedRoute.snapshot.params; // When component loads, grab the id\r\n    // Function to GET current blog with id in params\r\n    this.writerService.getSingleBlog(this.currentParams.id).subscribe(data => {\r\n      // Check if GET request was success or not\r\n      if (!data.success) {\r\n        this.messageClass = 'alert alert-danger'; // Set bootstrap error class\r\n        this.message = data.message; // Set error message\r\n      } else {\r\n        console.log(data.blog);\r\n        data.blog.tags = data.blog.tags.join(\" \");\r\n        console.log(data.blog);\r\n        this.blog = data.blog; // Save blog object for use in HTML\r\n        this.loading = false; // Allow loading of blog form\r\n      }\r\n    });        \r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/writer/writeredit/writeredit.component.ts","module.exports = \".footer{\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: justify;\\r\\n        -ms-flex-pack: justify;\\r\\n            justify-content: space-between;\\r\\n}\\r\\n\\r\\n.writer-info{\\r\\n    -ms-flex-preferred-size: 60%;\\r\\n        flex-basis: 60%;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/writer/writerhome.component.css\n// module id = ./src/app/components/writer/writerhome.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n  <button class=\\\"btn btn-primary\\\" routerLink=\\\"/writer/newblog\\\">New Blog</button>\\r\\n  <button [disabled]=\\\"loadingBlogs\\\" class=\\\"btn btn-primary\\\" (click)=\\\"reloadBlogs()\\\"><span class=\\\"glyphicon glyphicon-repeat\\\"></span>&nbsp;&nbsp;Reload</button>\\r\\n</div>\\r\\n<br />\\r\\n<br />\\r\\n<div class=\\\"panel panel-primary\\\" *ngFor=\\\"let blog of blogPosts\\\">\\r\\n\\r\\n    <!-- Panel Title -->\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n      <h3 class=\\\"panel-title\\\">{{ blog.title }}</h3>\\r\\n    </div>\\r\\n\\r\\n    <!-- Panel Body -->\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      {{ blog.content }}\\r\\n    </div>\\r\\n\\r\\n    <!-- Panel Footer Start -->\\r\\n    <div class=\\\"panel-footer footer\\\">\\r\\n      <div class=\\\"writer-info\\\">\\r\\n          <strong>Posted by: </strong>{{ blog.authorName }}\\r\\n          <strong> on </strong>{{ blog.createdAt | date:'MMM dd, yyyy' }}    \\r\\n      </div>\\r\\n      <div class=\\\"crud-routes\\\">\\r\\n        <!-- Edit Button -->\\r\\n        <a [routerLink]=\\\"['/writer/edit-blog/', blog._id]\\\" ><button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-info\\\">Edit</button></a>\\r\\n        <!-- Delete Button -->\\r\\n        <a [routerLink]=\\\"['/writer/delete-blog/', blog._id]\\\" ><button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\">Delete</button></a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- Panel Footer End -->\\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/writer/writerhome.component.html\n// module id = ./src/app/components/writer/writerhome.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { WriterService } from '../../services/writer.service';\r\n\r\n@Component({\r\n  selector: 'app-writerhome',\r\n  templateUrl: './writerhome.component.html',\r\n  styleUrls: ['./writerhome.component.css']\r\n})\r\nexport class WriterhomeComponent implements OnInit {\r\n\r\n  blogPosts;\r\n  loadingBlogs = false;\r\n\r\n  constructor(private writerService: WriterService) { }\r\n\r\n  // Reload blogs on current page\r\n  reloadBlogs() {\r\n    this.loadingBlogs = true; // Used to lock button\r\n    this.getBlogs(); // Add any new blogs to the page\r\n    setTimeout(() => {\r\n      this.loadingBlogs = false; // Release button lock after four seconds\r\n    }, 4000);\r\n  }\r\n\r\n  getBlogs(){\r\n    this.writerService.getAllBlogs().subscribe(data => {\r\n      this.blogPosts = data.blogs;\r\n      console.log(this.blogPosts);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.writerService.getAllBlogs().subscribe(data => {\r\n      this.blogPosts = data.blogs;\r\n      console.log(this.blogPosts);\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/writer/writerhome.component.ts","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  redirectUrl;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  // Function to check if user is authorized to view route\r\n  canActivate(\r\n    router: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ) {\r\n    // Check if user is logge din\r\n    if (this.authService.loggedIn()) {\r\n      return true; // Return true: User is allowed to view route\r\n    } else {\r\n      this.redirectUrl = state.url; // Grab previous urul\r\n      this.router.navigate(['/login']); // Return error and route to login page\r\n      return false; // Return false: user not authorized to view page\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/guards/auth.guard.ts","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class EditorGuard implements CanActivate {\r\n\r\n  redirectUrl;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  // Function to check if user is authorized to view route\r\n  canActivate(\r\n    router: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ) {\r\n    // Check if user is logge din\r\n    if (this.authService.hasAuthority() === \"editor\") {\r\n      return true; // Return true: User is allowed to view route\r\n    } else {\r\n      this.redirectUrl = state.url; // Grab previous urul\r\n      this.router.navigate(['/protected']); // Return error and route to login page\r\n      return false; // Return false: user not authorized to view page\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/guards/editor.guard.ts","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class NotAuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  // Function to determine whether user is authorized to view route\r\n  canActivate() {\r\n    // Check if user is logged in\r\n    if (this.authService.loggedIn()) {\r\n      this.router.navigate(['/']); // Return error, route to home\r\n      return false; // Return false: user not allowed to view route\r\n    } else {\r\n      return true; // Return true: user is allowed to view route\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/guards/notAuth.guard.ts","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class WriterGuard implements CanActivate {\r\n\r\n  redirectUrl;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  // Function to check if user is authorized to view route\r\n  canActivate(\r\n    router: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ) {\r\n    // Check if user is logge din\r\n    if (this.authService.hasAuthority() === \"writer\") {\r\n      return true; // Return true: User is allowed to view route\r\n    } else {\r\n      this.redirectUrl = state.url; // Grab previous urul\r\n      this.router.navigate(['/protected']); // Return error and route to login page\r\n      return false; // Return false: user not authorized to view page\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/guards/writer.guard.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { environment } from '../../environments/environment';\r\nimport 'rxjs/add/operator/map';\r\nimport * as jwt_decode from 'jwt-decode';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  domain = environment.domain;\r\n  authority;\r\n  authToken = null;\r\n  userName;\r\n  userId;\r\n  options;\r\n  \r\n  constructor(\r\n    private http: Http\r\n  ) { }\r\n\r\n  // Function to register user accounts\r\n  registerUser(user) {\r\n    return this.http.post(this.domain + 'api/auth/signup', user).map(res => { \r\n      console.log(res.json());\r\n      return res.json(); \r\n    });\r\n  }\r\n\r\n  // Function to login to user accounts\r\n  login(user) {\r\n    return this.http.post(this.domain + 'api/auth/signin', user).map(res => { \r\n      console.log(res.json());\r\n      return res.json(); \r\n    });\r\n  }\r\n\r\n  // Function to logout\r\n  logout() {\r\n    this.authToken = null; // Set token to null\r\n    this.userName = null; // Set user to null\r\n    this.authority = null;\r\n    this.userId = null;\r\n    localStorage.clear(); // Clear local storage\r\n  }\r\n\r\n\r\n  // Function to store user's data in client local storage\r\n  storeUserData(token, username, authority, id) {\r\n    localStorage.setItem('hushToken', token); // Set token in local storage\r\n    localStorage.setItem('hushUser', username); // Set user in local storage as string\r\n    localStorage.setItem('hushAuthority', authority);\r\n    localStorage.setItem('hushUserId', id);\r\n    this.authToken = token; // Assign token to be used elsewhere\r\n    this.userName = username; // Set user to be used elsewhere\r\n    this.authority = authority;\r\n    this.userId = id;\r\n  }\r\n\r\n  // Function to create headers, add token, to be used in HTTP requests\r\n  createAuthenticationHeaders() {\r\n    this.loadToken(); // Get token so it can be attached to headers\r\n    // Headers configuration options\r\n    this.options = new RequestOptions({\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json', // Format set to JSON\r\n        'authorization': this.authToken // Attach token\r\n      })\r\n    });\r\n  }\r\n\r\n  // Function to get token from client local storage\r\n  loadToken() {\r\n    this.authToken = localStorage.getItem('hushToken'); // Get token and asssign to variable to be used elsewhere\r\n  }\r\n\r\n  // Function to check if user is logged in\r\n  loggedIn() {\r\n    let authToken = localStorage.getItem('hushToken');\r\n    // if(authToken){\r\n    //   return true;\r\n    // }else{\r\n    //   return false;\r\n    // }\r\n    if(!this.isTokenExpired(authToken)){\r\n      return true;\r\n    }else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  hasAuthority(){\r\n    return localStorage.getItem('hushAuthority');\r\n  }\r\n\r\n  getTokenExpirationDate(token: string): Date {\r\n    const decoded = jwt_decode(token);\r\n\r\n    if (decoded.exp === undefined) return null;\r\n\r\n    const date = new Date(0); \r\n    date.setUTCSeconds(decoded.exp);\r\n    return date;\r\n  }\r\n\r\n  isTokenExpired(token?: string): boolean {\r\n    //if(!token) token = this.getToken();\r\n    if(!token) return true;\r\n\r\n    const date = this.getTokenExpirationDate(token);\r\n    if(date === undefined) return false;\r\n    return !(date.valueOf() > new Date().valueOf());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { environment } from '../../environments/environment';\r\nimport 'rxjs/add/operator/map';\r\n\r\n\r\n@Injectable()\r\nexport class EditorService {\r\n  options;\r\n  domain = this.authService.domain;\r\n\r\n  constructor(private authService: AuthService,\r\n    private http: Http\r\n  ) {}\r\n\r\n   // Function to create headers, add token, to be used in HTTP requests\r\n   createAuthenticationHeaders() {\r\n    this.authService.loadToken(); // Get token so it can be attached to headers\r\n    // Headers configuration options\r\n    this.options = new RequestOptions({\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json', // Format set to JSON\r\n        'authorization': this.authService.authToken // Attach token\r\n      })\r\n    });\r\n  }\r\n\r\n  // Function to get all blogs from the database\r\n  getAllBlogs() {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.get(this.domain + 'api/editor', this.options).map(res => {\r\n     console.log(res.json());\r\n     return res.json();\r\n    });\r\n  }\r\n\r\n  getSingleBlog(id){\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.get(this.domain + 'api/editor/'+ id , this.options).map(res => { \r\n      console.log(res.json());\r\n      return res.json(); \r\n    });\r\n  }\r\n\r\n  updateBlog(id, blog){\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.put(this.domain + 'api/editor/'+ id , blog , this.options).map(res => { \r\n      console.log(res.json());\r\n      return res.json(); \r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/editor.service.ts","import { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { environment } from '../../environments/environment';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class WriterService {\r\n  options;\r\n  domain = this.authService.domain;\r\n\r\n  constructor(private authService: AuthService,\r\n    private http: Http\r\n  ) {}\r\n\r\n    // Function to create headers, add token, to be used in HTTP requests\r\n  createAuthenticationHeaders() {\r\n    this.authService.loadToken(); // Get token so it can be attached to headers\r\n    // Headers configuration options\r\n    this.options = new RequestOptions({\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json', // Format set to JSON\r\n        'authorization': this.authService.authToken // Attach token\r\n      })\r\n    });\r\n  }\r\n\r\n  createBlog(blog) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.post(this.domain + 'api/writer/new', blog, this.options).map(res => { \r\n      console.log(res.json());\r\n      return res.json(); \r\n    });\r\n  }\r\n\r\n  getSingleBlog(id){\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.get(this.domain + 'api/writer/'+ id , this.options).map(res => { \r\n      console.log(res.json());\r\n      return res.json(); \r\n    });\r\n  }\r\n\r\n  updateBlog(id, blog){\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.put(this.domain + 'api/writer/'+ id , blog , this.options).map(res => { \r\n      console.log(res.json());\r\n      return res.json(); \r\n    });\r\n  }\r\n\r\n  // Function to get all blogs from the database\r\n  getAllBlogs() {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.get(this.domain + 'api/writer', this.options).map(res => {\r\n     console.log(res.json());\r\n     return res.json();\r\n    });\r\n  }\r\n\r\n  deleteBlog(id){\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.delete(this.domain + 'api/writer/'+ id , this.options).map(res => { \r\n      console.log(res.json());\r\n      return res.json(); \r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/writer.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  domain: \"http://localhost:3000/\"\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}